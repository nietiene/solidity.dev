/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  MyNFT,
  MyNFTInterface,
} from "../../../../contracts/ERC721/ERC721.sol/MyNFT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "MintNFT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50336040518060400160405280600581526020017f4d794e46540000000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f4d4e465400000000000000000000000000000000000000000000000000000000815250816000908161008d9190610445565b50806001908161009d9190610445565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101125760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101099190610558565b60405180910390fd5b6101218161012f60201b60201c565b506000600781905550610573565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061027657607f821691505b6020821081036102895761028861022f565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026102f17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826102b4565b6102fb86836102b4565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061034261033d61033884610313565b61031d565b610313565b9050919050565b6000819050919050565b61035c83610327565b61037061036882610349565b8484546102c1565b825550505050565b600090565b610385610378565b610390818484610353565b505050565b5b818110156103b4576103a960008261037d565b600181019050610396565b5050565b601f8211156103f9576103ca8161028f565b6103d3846102a4565b810160208510156103e2578190505b6103f66103ee856102a4565b830182610395565b50505b505050565b600082821c905092915050565b600061041c600019846008026103fe565b1980831691505092915050565b6000610435838361040b565b9150826002028217905092915050565b61044e826101f5565b67ffffffffffffffff81111561046757610466610200565b5b610471825461025e565b61047c8282856103b8565b600060209050601f8311600181146104af576000841561049d578287015190505b6104a78582610429565b86555061050f565b601f1984166104bd8661028f565b60005b828110156104e5578489015182556001820191506020850194506020810190506104c0565b8683101561050257848901516104fe601f89168261040b565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061054282610517565b9050919050565b61055281610537565b82525050565b600060208201905061056d6000830184610549565b92915050565b61214a806105826000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063b88d4fde11610071578063b88d4fde146102df578063c87b56dd146102fb578063d082e3811461032b578063e985e9c514610349578063f2fde38b1461037957610116565b8063715018a61461027d5780638da5cb5b1461028757806395d89b41146102a5578063a22cb465146102c357610116565b806323b872dd116100e957806323b872dd146101b5578063385e9e2e146101d157806342842e0e146102015780636352211e1461021d57806370a082311461024d57610116565b806301ffc9a71461011b57806306fdde031461014b578063081812fc14610169578063095ea7b314610199575b600080fd5b61013560048036038101906101309190611931565b610395565b6040516101429190611979565b60405180910390f35b610153610477565b6040516101609190611a24565b60405180910390f35b610183600480360381019061017e9190611a7c565b610509565b6040516101909190611aea565b60405180910390f35b6101b360048036038101906101ae9190611b31565b610525565b005b6101cf60048036038101906101ca9190611b71565b61053b565b005b6101eb60048036038101906101e69190611bc4565b61063d565b6040516101f89190611c00565b60405180910390f35b61021b60048036038101906102169190611b71565b61067b565b005b61023760048036038101906102329190611a7c565b61069b565b6040516102449190611aea565b60405180910390f35b61026760048036038101906102629190611bc4565b6106ad565b6040516102749190611c00565b60405180910390f35b610285610767565b005b61028f61077b565b60405161029c9190611aea565b60405180910390f35b6102ad6107a5565b6040516102ba9190611a24565b60405180910390f35b6102dd60048036038101906102d89190611c47565b610837565b005b6102f960048036038101906102f49190611dbc565b61084d565b005b61031560048036038101906103109190611a7c565b610872565b6040516103229190611a24565b60405180910390f35b6103336108db565b6040516103409190611c00565b60405180910390f35b610363600480360381019061035e9190611e3f565b6108e1565b6040516103709190611979565b60405180910390f35b610393600480360381019061038e9190611bc4565b610975565b005b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061046057507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610470575061046f826109fb565b5b9050919050565b60606000805461048690611eae565b80601f01602080910402602001604051908101604052809291908181526020018280546104b290611eae565b80156104ff5780601f106104d4576101008083540402835291602001916104ff565b820191906000526020600020905b8154815290600101906020018083116104e257829003601f168201915b5050505050905090565b600061051482610a65565b5061051e82610aed565b9050919050565b6105378282610532610b2a565b610b32565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105ad5760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105a49190611aea565b60405180910390fd5b60006105c183836105bc610b2a565b610b44565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610637578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161062e93929190611edf565b60405180910390fd5b50505050565b6000610647610d5e565b600060075490506106588382610de5565b60016007600082825461066b9190611f45565b9250508190555080915050919050565b6106968383836040518060200160405280600081525061084d565b505050565b60006106a682610a65565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107205760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016107179190611aea565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61076f610d5e565b6107796000610e03565b565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546107b490611eae565b80601f01602080910402602001604051908101604052809291908181526020018280546107e090611eae565b801561082d5780601f106108025761010080835404028352916020019161082d565b820191906000526020600020905b81548152906001019060200180831161081057829003601f168201915b5050505050905090565b610849610842610b2a565b8383610ec9565b5050565b61085884848461053b565b61086c610863610b2a565b85858585611038565b50505050565b606061087d82610a65565b5060006108886111e9565b905060008151116108a857604051806020016040528060008152506108d3565b806108b284611200565b6040516020016108c3929190611fb5565b6040516020818303038152906040525b915050919050565b60075481565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61097d610d5e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109ef5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109e69190611aea565b60405180910390fd5b6109f881610e03565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600080610a71836112ce565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ae457826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610adb9190611c00565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610b3f838383600161130b565b505050565b600080610b50846112ce565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610b9257610b918184866114d0565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c2357610bd460008560008061130b565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610ca6576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b610d66610b2a565b73ffffffffffffffffffffffffffffffffffffffff16610d8461077b565b73ffffffffffffffffffffffffffffffffffffffff1614610de357610da7610b2a565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610dda9190611aea565b60405180910390fd5b565b610dff828260405180602001604052806000815250611594565b5050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f3a57816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610f319190611aea565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161102b9190611979565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b11156111e2578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b8152600401611097949392919061202e565b6020604051808303816000875af19250505080156110d357506040513d601f19601f820116820180604052508101906110d0919061208f565b60015b611157573d8060008114611103576040519150601f19603f3d011682016040523d82523d6000602084013e611108565b606091505b50600081510361114f57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016111469190611aea565b60405180910390fd5b805160208201fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146111e057836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016111d79190611aea565b60405180910390fd5b505b5050505050565b606060405180602001604052806000815250905090565b60606000600161120f846115b8565b01905060008167ffffffffffffffff81111561122e5761122d611c91565b5b6040519080825280601f01601f1916602001820160405280156112605781602001600182028036833780820191505090505b509050600082602083010190505b6001156112c3578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816112b7576112b66120bc565b5b0494506000850361126e575b819350505050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806113445750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561147857600061135484610a65565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156113bf57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156113d257506113d081846108e1565b155b1561141457826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161140b9190611aea565b60405180910390fd5b811561147657838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6114db83838361170b565b61158f57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361155057806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016115479190611c00565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016115869291906120eb565b60405180910390fd5b505050565b61159e83836117cc565b6115b36115a9610b2a565b6000858585611038565b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611616577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161160c5761160b6120bc565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611653576d04ee2d6d415b85acef81000000008381611649576116486120bc565b5b0492506020810190505b662386f26fc10000831061168257662386f26fc100008381611678576116776120bc565b5b0492506010810190505b6305f5e10083106116ab576305f5e10083816116a1576116a06120bc565b5b0492506008810190505b61271083106116d05761271083816116c6576116c56120bc565b5b0492506004810190505b606483106116f357606483816116e9576116e86120bc565b5b0492506002810190505b600a8310611702576001810190505b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156117c357508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611784575061178384846108e1565b5b806117c257508273ffffffffffffffffffffffffffffffffffffffff166117aa83610aed565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361183e5760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016118359190611aea565b60405180910390fd5b600061184c83836000610b44565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146118c05760006040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016118b79190611aea565b60405180910390fd5b505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61190e816118d9565b811461191957600080fd5b50565b60008135905061192b81611905565b92915050565b600060208284031215611947576119466118cf565b5b60006119558482850161191c565b91505092915050565b60008115159050919050565b6119738161195e565b82525050565b600060208201905061198e600083018461196a565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156119ce5780820151818401526020810190506119b3565b60008484015250505050565b6000601f19601f8301169050919050565b60006119f682611994565b611a00818561199f565b9350611a108185602086016119b0565b611a19816119da565b840191505092915050565b60006020820190508181036000830152611a3e81846119eb565b905092915050565b6000819050919050565b611a5981611a46565b8114611a6457600080fd5b50565b600081359050611a7681611a50565b92915050565b600060208284031215611a9257611a916118cf565b5b6000611aa084828501611a67565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611ad482611aa9565b9050919050565b611ae481611ac9565b82525050565b6000602082019050611aff6000830184611adb565b92915050565b611b0e81611ac9565b8114611b1957600080fd5b50565b600081359050611b2b81611b05565b92915050565b60008060408385031215611b4857611b476118cf565b5b6000611b5685828601611b1c565b9250506020611b6785828601611a67565b9150509250929050565b600080600060608486031215611b8a57611b896118cf565b5b6000611b9886828701611b1c565b9350506020611ba986828701611b1c565b9250506040611bba86828701611a67565b9150509250925092565b600060208284031215611bda57611bd96118cf565b5b6000611be884828501611b1c565b91505092915050565b611bfa81611a46565b82525050565b6000602082019050611c156000830184611bf1565b92915050565b611c248161195e565b8114611c2f57600080fd5b50565b600081359050611c4181611c1b565b92915050565b60008060408385031215611c5e57611c5d6118cf565b5b6000611c6c85828601611b1c565b9250506020611c7d85828601611c32565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611cc9826119da565b810181811067ffffffffffffffff82111715611ce857611ce7611c91565b5b80604052505050565b6000611cfb6118c5565b9050611d078282611cc0565b919050565b600067ffffffffffffffff821115611d2757611d26611c91565b5b611d30826119da565b9050602081019050919050565b82818337600083830152505050565b6000611d5f611d5a84611d0c565b611cf1565b905082815260208101848484011115611d7b57611d7a611c8c565b5b611d86848285611d3d565b509392505050565b600082601f830112611da357611da2611c87565b5b8135611db3848260208601611d4c565b91505092915050565b60008060008060808587031215611dd657611dd56118cf565b5b6000611de487828801611b1c565b9450506020611df587828801611b1c565b9350506040611e0687828801611a67565b925050606085013567ffffffffffffffff811115611e2757611e266118d4565b5b611e3387828801611d8e565b91505092959194509250565b60008060408385031215611e5657611e556118cf565b5b6000611e6485828601611b1c565b9250506020611e7585828601611b1c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611ec657607f821691505b602082108103611ed957611ed8611e7f565b5b50919050565b6000606082019050611ef46000830186611adb565b611f016020830185611bf1565b611f0e6040830184611adb565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611f5082611a46565b9150611f5b83611a46565b9250828201905080821115611f7357611f72611f16565b5b92915050565b600081905092915050565b6000611f8f82611994565b611f998185611f79565b9350611fa98185602086016119b0565b80840191505092915050565b6000611fc18285611f84565b9150611fcd8284611f84565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b600061200082611fd9565b61200a8185611fe4565b935061201a8185602086016119b0565b612023816119da565b840191505092915050565b60006080820190506120436000830187611adb565b6120506020830186611adb565b61205d6040830185611bf1565b818103606083015261206f8184611ff5565b905095945050505050565b60008151905061208981611905565b92915050565b6000602082840312156120a5576120a46118cf565b5b60006120b38482850161207a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006040820190506121006000830185611adb565b61210d6020830184611bf1565b939250505056fea264697066735822122095da23f4164ec0296ea2bbc2500dc4571eff91828e52a491493df843e7ae67d664736f6c634300081c0033";

type MyNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyNFT__factory extends ContractFactory {
  constructor(...args: MyNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MyNFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MyNFT__factory {
    return super.connect(runner) as MyNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyNFTInterface {
    return new Interface(_abi) as MyNFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MyNFT {
    return new Contract(address, _abi, runner) as unknown as MyNFT;
  }
}

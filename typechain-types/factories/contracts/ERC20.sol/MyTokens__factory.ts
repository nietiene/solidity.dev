/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MyTokens,
  MyTokensInterface,
} from "../../../contracts/ERC20.sol/MyTokens";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "checkAllowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "checkBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "giveToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50336040518060400160405280600781526020017f4d59544f4b454e000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d544b0000000000000000000000000000000000000000000000000000000000815250816003908161008d9190610728565b50806004908161009d9190610728565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101125760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610109919061083b565b60405180910390fd5b6101218161015c60201b60201c565b506101573361013461022260201b60201c565b600a61014091906109c5565b606461014c9190610a10565b61022b60201b60201c565b610ae7565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361029d5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610294919061083b565b60405180910390fd5b6102af600083836102b360201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036103055780600260008282546102f99190610a52565b925050819055506103d8565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610391578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161038893929190610a95565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610421578060026000828254039250508190555061046e565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516104cb9190610acc565b60405180910390a3505050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061055957607f821691505b60208210810361056c5761056b610512565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026105d47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610597565b6105de8683610597565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061062561062061061b846105f6565b610600565b6105f6565b9050919050565b6000819050919050565b61063f8361060a565b61065361064b8261062c565b8484546105a4565b825550505050565b600090565b61066861065b565b610673818484610636565b505050565b5b818110156106975761068c600082610660565b600181019050610679565b5050565b601f8211156106dc576106ad81610572565b6106b684610587565b810160208510156106c5578190505b6106d96106d185610587565b830182610678565b50505b505050565b600082821c905092915050565b60006106ff600019846008026106e1565b1980831691505092915050565b600061071883836106ee565b9150826002028217905092915050565b610731826104d8565b67ffffffffffffffff81111561074a576107496104e3565b5b6107548254610541565b61075f82828561069b565b600060209050601f8311600181146107925760008415610780578287015190505b61078a858261070c565b8655506107f2565b601f1984166107a086610572565b60005b828110156107c8578489015182556001820191506020850194506020810190506107a3565b868310156107e557848901516107e1601f8916826106ee565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610825826107fa565b9050919050565b6108358161081a565b82525050565b6000602082019050610850600083018461082c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156108dc578086048111156108b8576108b7610856565b5b60018516156108c75780820291505b80810290506108d585610885565b945061089c565b94509492505050565b6000826108f557600190506109b1565b8161090357600090506109b1565b8160018114610919576002811461092357610952565b60019150506109b1565b60ff84111561093557610934610856565b5b8360020a91508482111561094c5761094b610856565b5b506109b1565b5060208310610133831016604e8410600b84101617156109875782820a90508381111561098257610981610856565b5b6109b1565b6109948484846001610892565b925090508184048111156109ab576109aa610856565b5b81810290505b9392505050565b600060ff82169050919050565b60006109d0826105f6565b91506109db836109b8565b9250610a087fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846108e5565b905092915050565b6000610a1b826105f6565b9150610a26836105f6565b9250828202610a34816105f6565b91508282048414831517610a4b57610a4a610856565b5b5092915050565b6000610a5d826105f6565b9150610a68836105f6565b9250828201905080821115610a8057610a7f610856565b5b92915050565b610a8f816105f6565b82525050565b6000606082019050610aaa600083018661082c565b610ab76020830185610a86565b610ac46040830184610a86565b949350505050565b6000602082019050610ae16000830184610a86565b92915050565b6114e480610af66000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a082311161009757806395d89b411161006657806395d89b41146102d7578063a9059cbb146102f5578063dd62ed3e14610325578063f2fde38b1461035557610100565b806370a082311461024f578063715018a61461027f5780638b099b23146102895780638da5cb5b146102b957610100565b806323b872dd116100d357806323b872dd146101a1578063313ce567146101d157806342966c68146101ef5780635f5152261461021f57610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd14610153578063193f974c14610171575b600080fd5b61010d610371565b60405161011a9190610f93565b60405180910390f35b61013d6004803603810190610138919061104e565b610403565b60405161014a91906110a9565b60405180910390f35b61015b610426565b60405161016891906110d3565b60405180910390f35b61018b6004803603810190610186919061104e565b610430565b60405161019891906110a9565b60405180910390f35b6101bb60048036038101906101b691906110ee565b610492565b6040516101c891906110a9565b60405180910390f35b6101d9610514565b6040516101e6919061115d565b60405180910390f35b61020960048036038101906102049190611178565b61051d565b60405161021691906110a9565b60405180910390f35b610239600480360381019061023491906111a5565b61057d565b60405161024691906110d3565b60405180910390f35b610269600480360381019061026491906111a5565b61058f565b60405161027691906110d3565b60405180910390f35b6102876105d7565b005b6102a3600480360381019061029e91906111d2565b6105eb565b6040516102b091906110d3565b60405180910390f35b6102c16105ff565b6040516102ce9190611221565b60405180910390f35b6102df610629565b6040516102ec9190610f93565b60405180910390f35b61030f600480360381019061030a919061104e565b6106bb565b60405161031c91906110a9565b60405180910390f35b61033f600480360381019061033a91906111d2565b61071d565b60405161034c91906110d3565b60405180910390f35b61036f600480360381019061036a91906111a5565b6107a4565b005b6060600380546103809061126b565b80601f01602080910402602001604051908101604052809291908181526020018280546103ac9061126b565b80156103f95780601f106103ce576101008083540402835291602001916103f9565b820191906000526020600020905b8154815290600101906020018083116103dc57829003601f168201915b5050505050905090565b60008061040e61082a565b905061041b818585610832565b600191505092915050565b6000600254905090565b60008161043c3361058f565b101561047d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610474906112e8565b60405180910390fd5b610488338484610832565b6001905092915050565b60008161049e8561058f565b10156104df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d6906112e8565b60405180910390fd5b6104ea848484610844565b6105098433846104fa883361071d565b6105049190611337565b610832565b600190509392505050565b60006012905090565b6000816105293361058f565b101561056a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610561906113b7565b60405180910390fd5b6105743383610938565b60019050919050565b60006105888261058f565b9050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6105df6109ba565b6105e96000610a41565b565b60006105f7838361071d565b905092915050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546106389061126b565b80601f01602080910402602001604051908101604052809291908181526020018280546106649061126b565b80156106b15780601f10610686576101008083540402835291602001916106b1565b820191906000526020600020905b81548152906001019060200180831161069457829003601f168201915b5050505050905090565b6000816106c73361058f565b1015610708576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ff90611423565b60405180910390fd5b610713338484610844565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6107ac6109ba565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361081e5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108159190611221565b60405180910390fd5b61082781610a41565b50565b600033905090565b61083f8383836001610b07565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108b65760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016108ad9190611221565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109285760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161091f9190611221565b60405180910390fd5b610933838383610cde565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109aa5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016109a19190611221565b60405180910390fd5b6109b682600083610cde565b5050565b6109c261082a565b73ffffffffffffffffffffffffffffffffffffffff166109e06105ff565b73ffffffffffffffffffffffffffffffffffffffff1614610a3f57610a0361082a565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a369190611221565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b795760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610b709190611221565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610beb5760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610be29190611221565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610cd8578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610ccf91906110d3565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d30578060026000828254610d249190611443565b92505081905550610e03565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610dbc578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610db393929190611477565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e4c5780600260008282540392505081905550610e99565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ef691906110d3565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f3d578082015181840152602081019050610f22565b60008484015250505050565b6000601f19601f8301169050919050565b6000610f6582610f03565b610f6f8185610f0e565b9350610f7f818560208601610f1f565b610f8881610f49565b840191505092915050565b60006020820190508181036000830152610fad8184610f5a565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fe582610fba565b9050919050565b610ff581610fda565b811461100057600080fd5b50565b60008135905061101281610fec565b92915050565b6000819050919050565b61102b81611018565b811461103657600080fd5b50565b60008135905061104881611022565b92915050565b6000806040838503121561106557611064610fb5565b5b600061107385828601611003565b925050602061108485828601611039565b9150509250929050565b60008115159050919050565b6110a38161108e565b82525050565b60006020820190506110be600083018461109a565b92915050565b6110cd81611018565b82525050565b60006020820190506110e860008301846110c4565b92915050565b60008060006060848603121561110757611106610fb5565b5b600061111586828701611003565b935050602061112686828701611003565b925050604061113786828701611039565b9150509250925092565b600060ff82169050919050565b61115781611141565b82525050565b6000602082019050611172600083018461114e565b92915050565b60006020828403121561118e5761118d610fb5565b5b600061119c84828501611039565b91505092915050565b6000602082840312156111bb576111ba610fb5565b5b60006111c984828501611003565b91505092915050565b600080604083850312156111e9576111e8610fb5565b5b60006111f785828601611003565b925050602061120885828601611003565b9150509250929050565b61121b81610fda565b82525050565b60006020820190506112366000830184611212565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061128357607f821691505b6020821081036112965761129561123c565b5b50919050565b7f42616c616e6365206e6f7420656e6f7567680000000000000000000000000000600082015250565b60006112d2601283610f0e565b91506112dd8261129c565b602082019050919050565b60006020820190508181036000830152611301816112c5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061134282611018565b915061134d83611018565b925082820390508181111561136557611364611308565b5b92915050565b7f62616c616e6365206e6f7420656e6f7567680000000000000000000000000000600082015250565b60006113a1601283610f0e565b91506113ac8261136b565b602082019050919050565b600060208201905081810360008301526113d081611394565b9050919050565b7f42616c616e6365206e6f7420656e6f7567687400000000000000000000000000600082015250565b600061140d601383610f0e565b9150611418826113d7565b602082019050919050565b6000602082019050818103600083015261143c81611400565b9050919050565b600061144e82611018565b915061145983611018565b925082820190508082111561147157611470611308565b5b92915050565b600060608201905061148c6000830186611212565b61149960208301856110c4565b6114a660408301846110c4565b94935050505056fea2646970667358221220a028d957873f50d962a4cf28a9120be087684ab6a6288bec0b4ca93a6b77139e64736f6c634300081c0033";

type MyTokensConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyTokensConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyTokens__factory extends ContractFactory {
  constructor(...args: MyTokensConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MyTokens & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MyTokens__factory {
    return super.connect(runner) as MyTokens__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyTokensInterface {
    return new Interface(_abi) as MyTokensInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MyTokens {
    return new Contract(address, _abi, runner) as unknown as MyTokens;
  }
}
